ERROR: LoadError: Out of GPU memory trying to allocate 2.924 MiB
Effective GPU memory usage: 99.87% (21.960 GiB/21.988 GiB)
Memory pool usage: 19.867 GiB (21.688 GiB reserved)

Stacktrace:
  [1] _pool_alloc
    @ ~/.julia/packages/CUDA/75aiI/src/memory.jl:660 [inlined]
  [2] macro expansion
    @ ~/.julia/packages/CUDA/75aiI/src/memory.jl:617 [inlined]
  [3] macro expansion
    @ ./timing.jl:395 [inlined]
  [4] pool_alloc
    @ ~/.julia/packages/CUDA/75aiI/src/memory.jl:616 [inlined]
  [5] CuArray{Float32, 3, CUDA.DeviceMemory}(::UndefInitializer, dims::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/75aiI/src/array.jl:74
  [6] similar
    @ ./abstractarray.jl:877 [inlined]
  [7] similar
    @ ./abstractarray.jl:876 [inlined]
  [8] similar
    @ ~/.julia/packages/CUDA/75aiI/src/broadcast.jl:25 [inlined]
  [9] similar
    @ ./broadcast.jl:223 [inlined]
 [10] copy
    @ ~/.julia/packages/GPUArrays/8Y80U/src/host/broadcast.jl:29 [inlined]
 [11] materialize
    @ ./broadcast.jl:903 [inlined]
 [12] broadcast_preserving_zero_d
    @ ./broadcast.jl:892 [inlined]
 [13] -(A::CuArray{Float32, 3, CUDA.DeviceMemory}, B::CuArray{Float32, 3, CUDA.DeviceMemory})
    @ Base ./arraymath.jl:8
 [14] adjoint
    @ ~/.julia/packages/Zygote/nsBv0/src/lib/array.jl:652 [inlined]
 [15] _pullback(__context__::Zygote.Context{false}, 571::typeof(-), A::CuArray{Float32, 3, CUDA.DeviceMemory}, B::CuArray{Float32, 3, CUDA.DeviceMemory})
    @ Zygote ~/.julia/packages/ZygoteRules/M4xmc/src/adjoint.jl:67
 [16] KANdense_layer
    @ ~/Julia-Wav-KAN/KAN/KAN_layers.jl:75 [inlined]
 [17] _pullback(ctx::Zygote.Context{false}, f::Main.KAN_RecurrentNO.layers.KANdense_layer, args::CuArray{Float32, 2, CUDA.DeviceMemory})
    @ Zygote ~/.julia/packages/Zygote/nsBv0/src/compiler/interface2.jl:0
 [18] fwd_pass
    @ ~/Julia-Wav-KAN/wavKAN_RNO/KAN_RNO.jl:58 [inlined]
 [19] _pullback(::Zygote.Context{false}, ::typeof(Main.KAN_RecurrentNO.fwd_pass), ::Main.KAN_RecurrentNO.KAN_RNO, ::CuArray{Float32, 1, CUDA.DeviceMemory}, ::CuArray{Float32, 1, CUDA.DeviceMemory}, ::CuArray{Float32, 2, CUDA.DeviceMemory})
    @ Zygote ~/.julia/packages/Zygote/nsBv0/src/compiler/interface2.jl:0
 [20] KAN_RNO
    @ ~/Julia-Wav-KAN/wavKAN_RNO/KAN_RNO.jl:71 [inlined]
 [21] _pullback(::Zygote.Context{false}, ::Main.KAN_RecurrentNO.KAN_RNO, ::CuArray{Float32, 2, CUDA.DeviceMemory}, ::CuArray{Float32, 2, CUDA.DeviceMemory})
    @ Zygote ~/.julia/packages/Zygote/nsBv0/src/compiler/interface2.jl:0
 [22] loss_fcn
    @ ~/Julia-Wav-KAN/utils.jl:12 [inlined]
 [23] _pullback(::Zygote.Context{false}, ::typeof(loss_fcn), ::Main.KAN_RecurrentNO.KAN_RNO, ::CuArray{Float32, 2, CUDA.DeviceMemory}, ::CuArray{Float32, 2, CUDA.DeviceMemory})
    @ Zygote ~/.julia/packages/Zygote/nsBv0/src/compiler/interface2.jl:0
 [24] #1
    @ ~/Julia-Wav-KAN/pipeline/train.jl:19 [inlined]
 [25] _pullback(ctx::Zygote.Context{false}, f::Main.training.var"#1#2"{typeof(loss_fcn), CuArray{Float32, 2, CUDA.DeviceMemory}, CuArray{Float32, 2, CUDA.DeviceMemory}}, args::Main.KAN_RecurrentNO.KAN_RNO)
    @ Zygote ~/.julia/packages/Zygote/nsBv0/src/compiler/interface2.jl:0
 [26] pullback(f::Function, cx::Zygote.Context{false}, args::Main.KAN_RecurrentNO.KAN_RNO)
    @ Zygote ~/.julia/packages/Zygote/nsBv0/src/compiler/interface.jl:90
 [27] pullback
    @ ~/.julia/packages/Zygote/nsBv0/src/compiler/interface.jl:88 [inlined]
 [28] withgradient(f::Function, args::Main.KAN_RecurrentNO.KAN_RNO)
    @ Zygote ~/.julia/packages/Zygote/nsBv0/src/compiler/interface.jl:205
 [29] train_step(m::Main.KAN_RecurrentNO.KAN_RNO, opt_state::@NamedTuple{output_layers::Vector{@NamedTuple{transform::@NamedTuple{weights::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 2, CUDA.DeviceMemory}, CuArray{Float32, 2, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}}, output_layer::Tuple{}, batch_norm::@NamedTuple{λ::Tuple{}, β::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 1, CUDA.DeviceMemory}, CuArray{Float32, 1, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}, γ::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 1, CUDA.DeviceMemory}, CuArray{Float32, 1, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}, μ::Tuple{}, σ²::Tuple{}, ϵ::Tuple{}, momentum::Tuple{}, affine::Tuple{}, track_stats::Tuple{}, active::Tuple{}, chs::Tuple{}}, scale::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 2, CUDA.DeviceMemory}, CuArray{Float32, 2, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}, translation::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 2, CUDA.DeviceMemory}, CuArray{Float32, 2, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}, reshape_fcn::Tuple{}, norm_permute::Tuple{}}}, hidden_layers::Vector{@NamedTuple{transform::@NamedTuple{weights::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 2, CUDA.DeviceMemory}, CuArray{Float32, 2, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}}, output_layer::Tuple{}, batch_norm::@NamedTuple{λ::Tuple{}, β::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 1, CUDA.DeviceMemory}, CuArray{Float32, 1, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}, γ::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 1, CUDA.DeviceMemory}, CuArray{Float32, 1, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}, μ::Tuple{}, σ²::Tuple{}, ϵ::Tuple{}, momentum::Tuple{}, affine::Tuple{}, track_stats::Tuple{}, active::Tuple{}, chs::Tuple{}}, scale::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 2, CUDA.DeviceMemory}, CuArray{Float32, 2, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}, translation::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 2, CUDA.DeviceMemory}, CuArray{Float32, 2, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}, reshape_fcn::Tuple{}, norm_permute::Tuple{}}}, dt::Optimisers.Leaf{Optimisers.Adam, Tuple{CuArray{Float32, 1, CUDA.DeviceMemory}, CuArray{Float32, 1, CUDA.DeviceMemory}, Tuple{Float32, Float32}}}, T::Tuple{}, n_hidden::Tuple{}}, train_loader::MLUtils.DataLoader{Tuple{CuArray{Float32, 2, CUDA.DeviceMemory}, CuArray{Float32, 2, CUDA.DeviceMemory}}, Random._GLOBAL_RNG, Val{nothing}}, test_loader::MLUtils.DataLoader{Tuple{CuArray{Float32, 2, CUDA.DeviceMemory}, CuArray{Float32, 2, CUDA.DeviceMemory}}, Random._GLOBAL_RNG, Val{nothing}}, loss::typeof(loss_fcn), epoch::Int64)
    @ Main.training ~/Julia-Wav-KAN/pipeline/train.jl:19
 [30] objective(trial::HyperTuning.Trial{Int64})
    @ Main ~/Julia-Wav-KAN/wavKAN_RNO/hyperparamter_tuning.jl:69
 [31] evaluate_trial!(f::typeof(objective), trial::HyperTuning.Trial{Int64}, verbose::Bool)
    @ HyperTuning ~/.julia/packages/HyperTuning/7Qthr/src/evaluator/sequential.jl:5
 [32] evaluate_objective_sequential(f::Function, scenario::Scenario)
    @ HyperTuning ~/.julia/packages/HyperTuning/7Qthr/src/evaluator/sequential.jl:27
 [33] evaluate_objective
    @ ~/.julia/packages/HyperTuning/7Qthr/src/evaluator/evaluate_objective.jl:12 [inlined]
 [34] optimize!(f::Function, scenario::Scenario)
    @ HyperTuning ~/.julia/packages/HyperTuning/7Qthr/src/optimize.jl:29
 [35] optimize(f::Function, scenario::Scenario)
    @ HyperTuning ~/.julia/packages/HyperTuning/7Qthr/src/optimize.jl:47
 [36] top-level scope
    @ ~/Julia-Wav-KAN/wavKAN_RNO/hyperparamter_tuning.jl:105
in expression starting at /home/ubuntu/Julia-Wav-KAN/wavKAN_RNO/hyperparamter_tuning.jl:105
[+] Trial 1: Pair{Symbol, Any}[:activation => "relu", :b_size => 17, :gamma => 0.5742362944389552, :learning_rate => 0.0771438413684239, :n_hidden => 22, :n_layers => 4, :step_rate => 38, :wav_five => "Morlet", :wav_four => "Shannon", :wav_one => "Meyer", :wav_six => "Morlet", :wav_three => "Shannon", :wav_two => "MexicanHat"] evaluated NaN at instance 1
[+] Trial 2: Pair{Symbol, Any}[:activation => "selu", :b_size => 7, :gamma => 0.6841608220413147, :learning_rate => 0.06935710306164113, :n_hidden => 3, :n_layers => 3, :step_rate => 20, :wav_five => "Shannon", :wav_four => "DerivativeOfGaussian", :wav_one => "Shannon", :wav_six => "DerivativeOfGaussian", :wav_three => "Morlet", :wav_two => "DerivativeOfGaussian"] evaluated NaN at instance 1
[+] Trial 3: Pair{Symbol, Any}[:activation => "selu", :b_size => 19, :gamma => 0.7410638705326235, :learning_rate => 0.046140134144324524, :n_hidden => 20, :n_layers => 6, :step_rate => 32, :wav_five => "MexicanHat", :wav_four => "DerivativeOfGaussian", :wav_one => "Shannon", :wav_six => "Morlet", :wav_three => "Meyer", :wav_two => "Shannon"] evaluated NaN at instance 1
[+] Trial 4: Pair{Symbol, Any}[:activation => "swish", :b_size => 20, :gamma => 0.5370173259890626, :learning_rate => 0.057839954928838325, :n_hidden => 29, :n_layers => 2, :step_rate => 17, :wav_five => "Morlet", :wav_four => "Shannon", :wav_one => "Morlet", :wav_six => "MexicanHat", :wav_three => "Morlet", :wav_two => "DerivativeOfGaussian"] evaluated NaN at instance 1
[+] Trial 5: Pair{Symbol, Any}[:activation => "gelu", :b_size => 16, :gamma => 0.8676935543259842, :learning_rate => 0.031238609228080014, :n_hidden => 48, :n_layers => 3, :step_rate => 25, :wav_five => "MexicanHat", :wav_four => "DerivativeOfGaussian", :wav_one => "Shannon", :wav_six => "Meyer", :wav_three => "MexicanHat", :wav_two => "Shannon"] evaluated NaN at instance 1
[+] Trial 6: Pair{Symbol, Any}[:activation => "selu", :b_size => 19, :gamma => 0.5494269194920398, :learning_rate => 0.029842985336032513, :n_hidden => 43, :n_layers => 4, :step_rate => 20, :wav_five => "Meyer", :wav_four => "MexicanHat", :wav_one => "Meyer", :wav_six => "Morlet", :wav_three => "MexicanHat", :wav_two => "Shannon"] evaluated NaN at instance 1
[+] Trial 7: Pair{Symbol, Any}[:activation => "leakyrelu", :b_size => 4, :gamma => 0.8683060726353646, :learning_rate => 0.0030130822123474693, :n_hidden => 43, :n_layers => 3, :step_rate => 17, :wav_five => "Morlet", :wav_four => "Meyer", :wav_one => "MexicanHat", :wav_six => "Shannon", :wav_three => "MexicanHat", :wav_two => "Shannon"] evaluated 298.4272994995117 at instance 1
[*] Trial 8: Pair{Symbol, Any}[:activation => "swish", :b_size => 19, :gamma => 0.8892017317051188, :learning_rate => 0.018214959422136034, :n_hidden => 46, :n_layers => 2, :step_rate => 30, :wav_five => "Morlet", :wav_four => "Shannon", :wav_one => "MexicanHat", :wav_six => "Morlet", :wav_three => "MexicanHat", :wav_two => "DerivativeOfGaussian"] evaluated 20.438833355903625 at instance 1
[+] Trial 9: Pair{Symbol, Any}[:activation => "selu", :b_size => 8, :gamma => 0.8555865008816608, :learning_rate => 0.049631661714525765, :n_hidden => 13, :n_layers => 4, :step_rate => 10, :wav_five => "Shannon", :wav_four => "Meyer", :wav_one => "DerivativeOfGaussian", :wav_six => "Meyer", :wav_three => "Morlet", :wav_two => "DerivativeOfGaussian"] evaluated NaN at instance 1
[+] Trial 10: Pair{Symbol, Any}[:activation => "swish", :b_size => 7, :gamma => 0.6834644886457513, :learning_rate => 0.0041501031462083575, :n_hidden => 4, :n_layers => 2, :step_rate => 37, :wav_five => "Meyer", :wav_four => "Meyer", :wav_one => "Meyer", :wav_six => "DerivativeOfGaussian", :wav_three => "Meyer", :wav_two => "MexicanHat"] evaluated NaN at instance 1
[+] Trial 11: Pair{Symbol, Any}[:activation => "gelu", :b_size => 9, :gamma => 0.7068050178982556, :learning_rate => 0.08436551035809, :n_hidden => 60, :n_layers => 3, :step_rate => 34, :wav_five => "MexicanHat", :wav_four => "Meyer", :wav_one => "MexicanHat", :wav_six => "Morlet", :wav_three => "Shannon", :wav_two => "Meyer"] evaluated NaN at instance 1
[+] Trial 12: Pair{Symbol, Any}[:activation => "selu", :b_size => 18, :gamma => 0.7574131035499119, :learning_rate => 0.07854878464482697, :n_hidden => 17, :n_layers => 5, :step_rate => 38, :wav_five => "MexicanHat", :wav_four => "DerivativeOfGaussian", :wav_one => "DerivativeOfGaussian", :wav_six => "Shannon", :wav_three => "Morlet", :wav_two => "MexicanHat"] evaluated NaN at instance 1
[+] Trial 13: Pair{Symbol, Any}[:activation => "gelu", :b_size => 7, :gamma => 0.5794033635942746, :learning_rate => 0.09815511489957238, :n_hidden => 57, :n_layers => 4, :step_rate => 28, :wav_five => "MexicanHat", :wav_four => "DerivativeOfGaussian", :wav_one => "DerivativeOfGaussian", :wav_six => "Morlet", :wav_three => "DerivativeOfGaussian", :wav_two => "DerivativeOfGaussian"] evaluated NaN at instance 1
